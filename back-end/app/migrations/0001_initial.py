# Generated by Django 2.2.5 on 2021-02-27 19:29

import app.managers
import app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, default=app.models.generate_user_name, max_length=64)),
                ('first_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff')),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('register_date', models.DateField(auto_now_add=True)),
                ('city', models.CharField(blank=True, max_length=64, null=True)),
                ('address_one', models.CharField(blank=True, max_length=128, null=True)),
                ('address_two', models.CharField(blank=True, max_length=128, null=True)),
                ('state', models.CharField(blank=True, max_length=64, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=16, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='images/avatar')),
                ('verified', models.BooleanField(blank=True, default=False, null=True)),
                ('closed', models.BooleanField(blank=True, default=False, null=True)),
                ('balance', models.FloatField(blank=True, default=0, null=True)),
                ('verify_file', models.FileField(blank=True, null=True, upload_to='verify/files')),
                ('code', models.CharField(blank=True, max_length=12, null=True)),
                ('is_reset_code', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', app.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('flag', models.CharField(blank=True, max_length=5, null=True)),
                ('zip_code', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('band', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Enum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=32)),
                ('data', models.TextField(blank=True, null=True)),
                ('values', models.TextField(blank=True, null=True)),
                ('max_value', models.IntegerField(blank=True, default=100, null=True)),
                ('type', models.CharField(default='text', max_length=32)),
                ('global_enum', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('card_name', models.CharField(blank=True, max_length=64, null=True)),
                ('country', models.CharField(blank=True, max_length=32, null=True)),
                ('show', models.BooleanField(blank=True, default=True, null=True)),
                ('game_type', models.CharField(blank=True, max_length=32, null=True)),
                ('type', models.CharField(blank=True, choices=[('K', 'Keys'), ('C', 'Charging')], default='K', max_length=2, null=True)),
                ('platform', models.CharField(blank=True, choices=[('C', 'Computer'), ('M', 'Mobile'), ('P', 'PlayStation'), ('X', 'XBox')], default='C', max_length=2, null=True)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('about', models.TextField(blank=True, default='', null=True)),
                ('details', models.TextField(blank=True, default='', null=True)),
                ('video', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('facebook', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('website', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('youtube', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='games/logo')),
                ('bg_cover', models.ImageField(blank=True, null=True, upload_to='games/bg_cover')),
                ('bg_card', models.ImageField(blank=True, null=True, upload_to='games/bg_card')),
            ],
        ),
        migrations.CreateModel(
            name='GameCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('price', models.FloatField(blank=True, default=1, null=True)),
                ('discount', models.FloatField(blank=True, default=0.0, null=True)),
                ('max', models.IntegerField(blank=True, default=10, null=True)),
                ('min', models.IntegerField(blank=True, default=0, null=True)),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
                ('show', models.BooleanField(blank=True, default=True, null=True)),
                ('sold_flag', models.BooleanField(blank=True, default=False, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_cards', to='app.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_created=True, blank=True, null=True)),
                ('compete_order_date', models.DateTimeField(blank=True, null=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_star', models.IntegerField(blank=True, null=True)),
                ('review_description', models.TextField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, choices=[('I', 'I'), ('C', 'C'), ('E', 'E')], default='I', max_length=2, null=True)),
                ('error_msg', models.TextField(blank=True, max_length=255, null=True)),
                ('game_card', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='gc_orders', to='app.GameCard')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=128)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True, null=True)),
                ('action', models.CharField(max_length=128)),
                ('info', models.CharField(max_length=255)),
                ('data', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, choices=[('A', 'Add Balance'), ('R', 'Remove Balance'), ('S', 'Set Balance'), ('P', 'Pay')], default='A', max_length=1, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('details', models.CharField(blank=True, default='', max_length=254, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('available', models.BooleanField(blank=True, default=True, null=True)),
                ('game_card', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='keys', to='app.GameCard')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users', to='app.Country'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
